{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","props","className","src","logo","alt","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","this","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","React","Component","window","d3_hexbin","hexbin","ShotChart","minCount","chartType","displayTooltip","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","displayToolTips","displayType","call","datum","id","CountSlider","state","inputValue","defaultValue","handleChange","console","log","setState","handleMinCountChange","span","min","max","onChange","value","style","marginLeft","DataViewContainer","_","debounce","handleChartTypeChange","e","target","handleDisplayTooltipChange","Group","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","handleSelectPlayer","options","key","size","placeholder","optionLabelProp","onSearch","suffix","type","Main","loadPlayerInfo","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b687cb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\r\nimport logo from '../assets/images/nba-logoman-word-white.svg';\r\n\r\nexport function TopNavBar(props) {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n    );\r\n}\r\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    playerId: 2544,\r\n    fullName: 'Lebron James',\r\n    teamAbbreviation: 'LAL',\r\n};","\r\nimport React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nexport class Profile extends React.Component {\r\n    render() {\r\n        const {\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            playerName,\r\n            height,\r\n            weight,\r\n            playerId,\r\n            pts, reb, ast, pie,\r\n        } = this.props.playerInfo;\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n                <img\r\n                    className=\"profile-pic\"\r\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                    alt=\"Profile\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Team</div>\r\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n                </div>\r\n                <img\r\n                    className=\"team-logo\"\r\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                    alt=\"Team\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Height</div>\r\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Weight</div>\r\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PTS</div>\r\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">REB</div>\r\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">AST</div>\r\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PIE</div>\r\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = { hexbin : hexbin }; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number.isRequired,\r\n        minCount: PropTypes.number.isRequired,\r\n        chartType: PropTypes.string.isRequired,\r\n        displayTooltip: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { playerId, minCount, chartType, displayTooltip } = this.props;\r\n        nba.stats.shots({\r\n            PlayerID: playerId\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n\r\n            const courtSelection = d3.select(\"#shot-chart\");\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500);\r\n            const chart_shots = shots()\r\n                .shotRenderThreshold(minCount)\r\n                .displayToolTips(displayTooltip)\r\n                .displayType(chartType);\r\n            courtSelection.call(chart_court);\r\n            courtSelection.datum(final_shots).call(chart_shots);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nexport class CountSlider extends React.Component {\r\n    state = {\r\n        inputValue: this.props.defaultValue,\r\n    };\r\n\r\n    handleChange = (inputValue) => {\r\n        console.log('CountSlider update');\r\n        this.setState({ inputValue });\r\n        this.props.handleMinCountChange(inputValue);\r\n    };\r\n\r\n    render() {\r\n        const { inputValue } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Slider\r\n                        min={1}\r\n                        max={20}\r\n                        onChange={this.handleChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                    />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={inputValue}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { ShotChart } from './ShotChart';\r\nimport { CountSlider } from './CountSlider';\r\nimport { Radio, Row, Col, Switch } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nexport class DataViewContainer extends React.Component {\r\n    state = {\r\n        minCount: 2,\r\n        chartType: 'hexbin',\r\n        displayTooltip: true,\r\n    };\r\n\r\n    handleMinCountChange = _.debounce((minCount) => {\r\n        console.log(`handleMinCountChange, ${minCount}`);\r\n        this.setState({ minCount })\r\n    }, 500);\r\n\r\n    handleChartTypeChange = (e) => {\r\n        this.setState({ chartType: e.target.value });\r\n    };\r\n\r\n    handleDisplayTooltipChange = (displayTooltip) => {\r\n        this.setState({ displayTooltip });\r\n    }\r\n\r\n    render() {\r\n        const { playerId } = this.props;\r\n        const { minCount, chartType, displayTooltip } = this.state;\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart playerId={playerId} minCount={minCount} chartType={chartType} displayTooltip={displayTooltip}/>\r\n                <div className=\"filters\">\r\n                    {chartType === 'hexbin' ? (\r\n                        <CountSlider handleMinCountChange={this.handleMinCountChange} defaultValue={2}/>\r\n                    ) : null}\r\n                    <br/>\r\n                    <Row>\r\n                        <Col span={9}>\r\n                            <Radio.Group onChange={this.handleChartTypeChange} value={chartType}>\r\n                                <Radio value=\"hexbin\">Hexbin</Radio>\r\n                                <Radio value=\"scatter\">Scatter</Radio>\r\n                            </Radio.Group>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            Tooltip: &nbsp;\r\n                            <Switch\r\n                                checkedChildren=\"On\"\r\n                                unCheckedChildren=\"Off\"\r\n                                onChange={this.handleDisplayTooltipChange}\r\n                                defaultChecked\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { AutoComplete, Input, Icon } from 'antd';\r\nimport nba from 'nba';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        console.log(value);\r\n\r\n        this.setState({\r\n            dataSource: !value ?\r\n                [] : nba.searchPlayers(value).map(player => ({\r\n                    fullName: player.fullName,\r\n                    playerId: player.playerId,\r\n                }))\r\n        });\r\n\r\n    }\r\n\r\n    onSelect = (playerName) => {\r\n        this.props.handleSelectPlayer(playerName);\r\n    }\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        console.log(dataSource);\r\n        const options = dataSource.map((player) => (\r\n            <Option key={player.fullName} value={player.fullName}          className=\"player-option\">\r\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\r\n                <span className=\"player-option-label\">{player.fullName}</span>\r\n            </Option>\r\n        ));\r\n\r\n        return (\r\n            <AutoComplete\r\n                className=\"search-bar\"\r\n                size=\"large\"\r\n                dataSource={options}\r\n                placeholder=\"Search NBA Player\"\r\n                optionLabelProp=\"value\"\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n            >\r\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\r\n            </AutoComplete>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Profile } from './Profile';\r\nimport { DataViewContainer } from './DataViewContainer';\r\nimport { SearchBar } from './SearchBar';\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\nimport nba from 'nba';\r\n\r\nexport class Main extends React.Component {\r\n    state = {\r\n        playerInfo: DEFAULT_PLAYER_INFO,\r\n    };\r\n    loadPlayerInfo = (playerName) => {\r\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\r\n            const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n            this.setState({ playerInfo });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerInfo(this.state.playerInfo.fullName);\r\n    }\r\n    handleSelectPlayer = (playerName)=>{\r\n        this.loadPlayerInfo(playerName);\r\n    }\r\n    render() {\r\n        const { playerInfo } = this.state;\r\n        return (\r\n            <div className=\"main\">\r\n                <SearchBar handleSelectPlayer={this.handleSelectPlayer}/>\r\n                <div className=\"player\">\r\n                    <Profile playerInfo={this.state.playerInfo} />\r\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { TopNavBar } from './TopNavBar';\nimport { Main } from './Main';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <TopNavBar/>\n                <Main/>\n            </div>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}